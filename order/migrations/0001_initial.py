# Generated by Django 5.1.5 on 2025-04-21 08:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('BusinessPartner', '0029_remove_businesspartner_partner_type'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Craftsman',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('bp_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='YourModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('your_datetime_field', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('new', 'New'), ('in-process', 'In Process'), ('awaiting-approval', 'Awaiting Approval'), ('completed', 'Completed'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='new', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('order_image', models.ImageField(blank=True, null=True, upload_to='order_images/', verbose_name='Add Images')),
                ('order_no', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('state', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending')], max_length=50)),
                ('name', models.CharField(max_length=255)),
                ('reference_no', models.CharField(max_length=20, unique=True)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('due_date', models.DateField()),
                ('category', models.CharField(blank=True, choices=[('Rings', 'Rings'), ('Chains', 'Chains'), ('Pendants', 'Pendants'), ('Bangles', 'Bangles'), ('Anklets', 'Anklets'), ('Necklaces', 'Necklaces'), ('Bracelets', 'Bracelets'), ('Earrings', 'Earrings')], max_length=50, null=True)),
                ('order_type', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('preorder', 'Preorder')], default='online', max_length=10)),
                ('quantity', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dtype', models.CharField(choices=[('standard', 'Standard'), ('express', 'Express'), ('custom', 'Custom')], default='standard', max_length=10)),
                ('branch_code', models.CharField(max_length=10, unique=True)),
                ('product', models.CharField(max_length=100)),
                ('design', models.CharField(max_length=100)),
                ('vendor_design', models.CharField(max_length=100)),
                ('barcoded_quality', models.BooleanField(default=False)),
                ('supplied', models.IntegerField(default=0)),
                ('balance', models.IntegerField(default=0)),
                ('assigned_by', models.CharField(default='Unknown', max_length=100)),
                ('narration', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('sub_brand', models.CharField(blank=True, max_length=100, null=True)),
                ('make', models.CharField(blank=True, max_length=100, null=True)),
                ('work_style', models.CharField(blank=True, max_length=100, null=True)),
                ('form', models.CharField(blank=True, max_length=100, null=True)),
                ('finish', models.CharField(blank=True, max_length=100, null=True)),
                ('theme', models.CharField(blank=True, max_length=100, null=True)),
                ('collection', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('assign_remarks', models.TextField(blank=True, null=True)),
                ('screw', models.CharField(blank=True, choices=[('Closed', 'Closed'), ('Open', 'Open')], max_length=50, null=True)),
                ('polish', models.CharField(blank=True, max_length=100, null=True)),
                ('metal_colour', models.CharField(blank=True, max_length=50, null=True)),
                ('purity', models.CharField(blank=True, max_length=50, null=True)),
                ('stone', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('hallmark', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('rodium', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('enamel', models.CharField(blank=True, max_length=50, null=True)),
                ('hook', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=50, null=True)),
                ('size', models.CharField(blank=True, choices=[('Large', 'Large'), ('Medium', 'Medium'), ('Small', 'Small')], max_length=50, null=True)),
                ('open_close', models.CharField(choices=[('open', 'Open'), ('close', 'Close')], default='open', max_length=10)),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('hbt_class', models.CharField(blank=True, max_length=50, null=True)),
                ('console_id', models.CharField(blank=True, max_length=50, null=True)),
                ('tolerance_from', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tolerance_to', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('bp_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='BusinessPartner.businesspartner')),
                ('craftsman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_orders', to='BusinessPartner.businesspartner')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role_name', models.CharField(choices=[('admin', 'Admin'), ('superadmin', 'Super Admin'), ('keyuser', 'Key User'), ('user', 'User')], default='user', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, related_name='order_users', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='order_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
